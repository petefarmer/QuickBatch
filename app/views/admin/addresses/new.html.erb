<div class="min-h-screen bg-gray-100">
  <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
    <div class="px-4 py-6 sm:px-0">
      <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-semibold text-gray-900">New Address</h1>
        <%= link_to "Back to List", admin_addresses_path, class: "inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
      </div>

      <div class="bg-white shadow overflow-hidden sm:rounded-lg">
        <div class="px-4 py-5 sm:p-6">
          <%= form_with(model: [:admin, @address], local: true) do |f| %>
            <% if @address.errors.any? %>
              <div class="rounded-md bg-red-50 p-4 mb-6">
                <div class="flex">
                  <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                    </svg>
                  </div>
                  <div class="ml-3">
                    <h3 class="text-sm font-medium text-red-800">
                      <%= pluralize(@address.errors.count, "error") %> prohibited this address from being saved:
                    </h3>
                    <div class="mt-2 text-sm text-red-700">
                      <ul class="list-disc pl-5 space-y-1">
                        <% @address.errors.full_messages.each do |message| %>
                          <li><%= message %></li>
                        <% end %>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            <% end %>

            <div class="space-y-6">
              <div>
                <%= f.label :addressable_type, "Owner Type", class: "block text-sm font-medium text-gray-700" %>
                <%= f.select :addressable_type, Address.addressable_types.map { |type| [type.titleize, type] }, 
                    { selected: @addressable_type },
                    class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" %>
              </div>

              <div>
                <%= f.label :addressable_id, "Owner", class: "block text-sm font-medium text-gray-700" %>
                <%= f.collection_select :addressable_id, @addressable_options, :id, 
                    ->(record) { "#{record.customer_name} (#{record.customer_key})" },
                    { include_blank: "Select an owner" },
                    class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" %>
              </div>

              <div>
                <%= f.label :address_type, class: "block text-sm font-medium text-gray-700" %>
                <%= f.select :address_type, Address.address_types.keys.map { |type| [type.titleize, type] }, {}, class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" %>
              </div>

              <div>
                <%= f.label :street_address_1, "Street Address", class: "block text-sm font-medium text-gray-700" %>
                <%= f.text_field :street_address_1, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
              </div>

              <div>
                <%= f.label :street_address_2, "Street Address (Line 2)", class: "block text-sm font-medium text-gray-700" %>
                <%= f.text_field :street_address_2, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
              </div>

              <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
                <div class="sm:col-span-3">
                  <%= f.label :city, class: "block text-sm font-medium text-gray-700" %>
                  <%= f.text_field :city, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
                </div>

                <div class="sm:col-span-3">
                  <%= f.label :state_province, "State/Province", class: "block text-sm font-medium text-gray-700" %>
                  <%= f.text_field :state_province, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
                </div>

                <div class="sm:col-span-3">
                  <%= f.label :postal_code, class: "block text-sm font-medium text-gray-700" %>
                  <%= f.text_field :postal_code, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
                </div>

                <div class="sm:col-span-3">
                  <%= f.label :country_code, "Country", class: "block text-sm font-medium text-gray-700" %>
                  <%= f.select :country_code, 
                      ISO3166::Country.all.map { |c| [c.translations['en'], c.alpha2] }.sort_by(&:first),
                      { include_blank: "Select a country" },
                      { class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" } %>
                </div>
              </div>

              <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
                <div class="sm:col-span-3">
                  <%= f.label :phone, class: "block text-sm font-medium text-gray-700" %>
                  <%= f.telephone_field :phone, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
                </div>

                <div class="sm:col-span-3">
                  <%= f.label :email, class: "block text-sm font-medium text-gray-700" %>
                  <%= f.email_field :email, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
                </div>
              </div>

              <div class="flex items-center">
                <%= f.check_box :is_default, class: "h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded" %>
                <%= f.label :is_default, "Set as default address", class: "ml-2 block text-sm text-gray-900" %>
              </div>
            </div>

            <div class="mt-6">
              <%= f.submit "Create Address", class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<%= javascript_tag do %>
  document.addEventListener('DOMContentLoaded', function() {
    const addressableTypeSelect = document.getElementById('address_addressable_type');
    const addressableIdSelect = document.getElementById('address_addressable_id');

    function updateAddressableOptions() {
      const type = addressableTypeSelect.value;
      if (!type) return;

      fetch(`/admin/addresses/addressable_options?type=${type}`)
        .then(response => response.json())
        .then(data => {
          addressableIdSelect.innerHTML = '';
          data.forEach(option => {
            const opt = document.createElement('option');
            opt.value = option.id;
            opt.textContent = option.name;
            addressableIdSelect.appendChild(opt);
          });
        });
    }

    addressableTypeSelect.addEventListener('change', updateAddressableOptions);
  });
<% end %> 